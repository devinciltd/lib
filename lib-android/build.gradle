apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'android-apt'
apply plugin: 'jacoco-android'
apply plugin: 'me.tatarka.retrolambda'
apply from: rootProject.file(fixMissingResourceClasses)

project.archivesBaseName = 'android'

android {
  compileSdkVersion configCompileSdkVersion
  buildToolsVersion configBuildToolsVersion

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion configTargetSdkVersion
    versionCode 1
    versionName project.version

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  resourcePrefix 'lib_'

  testBuildType "debug"

  useLibrary 'org.apache.http.legacy'
}

dependencies {
  compile project(':lib-android-common')

  compile support.appCompat
  compile support.design
  provided support.annotations
  provided dagger.dagger
  apt dagger.compiler
  provided jsr205

  testCompile project(':lib-android-robolectric')
  testCompile assertJAndroid.design
  testCompile assertJCore
  testCompile junit
  testCompile mockitoCore
  testCompile robolectric.core

  androidTestCompile assertJCore
  androidTestCompile espressoCore
  androidTestCompile junit
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked"
  options.compilerArgs << "-Xlint:deprecation"
}

task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

artifacts {
  archives androidSourcesJar
}

jacocoAndroidUnitTestReport {
  excludes = jacocoExcludes
}

afterEvaluate {
  ['android.support.design', 'android.support.v7.appcompat'].each generateMissingResourceClass
}
